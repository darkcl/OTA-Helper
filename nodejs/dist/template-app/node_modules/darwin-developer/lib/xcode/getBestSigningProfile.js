'use strict';

var _extends = require('babel-runtime/helpers/extends')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _this = this;

var _lodashUniq = require('lodash.uniq');

var _lodashUniq2 = _interopRequireDefault(_lodashUniq);

var _security = require('../security');

var _mobileprovision = require('../mobileprovision');

function getDevelopersFromIdentities(identities) {
    return (0, _lodashUniq2['default'])(identities.map(function (identity) {
        return identity.name;
    }));
}

function sortProvision(profileA, profileB) {
    // Sort non-wildcard first
    if (profileA.isWildcard && !profileB.isWildcard) {
        return 1;
    } else if (!profileA.isWildcard && profileB.isWildcard) {
        return -1;
    }

    // Sort by amount of devices
    var devicesA = profileA.ProvisionedDevices.length;
    var devicesB = profileB.ProvisionedDevices.length;
    if (devicesA < devicesB) {
        return 1;
    } else if (devicesA > devicesB) {
        return -1;
    }

    return 0;
}

function getBestMatchingProvision(provision) {
    if (!provision.length) {
        return null;
    }

    if (provision.length === 1) {
        return provision.pop();
    }

    provision.sort(sortProvision);
    return provision.shift();
}

function throwOnMissingFilters(filters) {
    var fields = ['platform', 'group', 'sku'];

    for (var _iterator = fields, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {
        var _ref;

        if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
        } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
        }

        var field = _ref;

        if (!filters[field]) {
            throw new Error('Option ' + field + ' must be given');
        }
    }
}

exports['default'] = function callee$0$0() {
    var filters = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var keychains, _iterator2, _isArray2, _i2, _ref2, keychain, identities, developers, _iterator3, _isArray3, _i3, _ref3, developer, provision, finalProvision;

    return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
        while (1) switch (context$1$0.prev = context$1$0.next) {
            case 0:
                throwOnMissingFilters(filters);
                context$1$0.next = 3;
                return _regeneratorRuntime.awrap((0, _security.listKeychains)('user'));

            case 3:
                keychains = context$1$0.sent;
                _iterator2 = keychains, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);

            case 5:
                if (!_isArray2) {
                    context$1$0.next = 11;
                    break;
                }

                if (!(_i2 >= _iterator2.length)) {
                    context$1$0.next = 8;
                    break;
                }

                return context$1$0.abrupt('break', 42);

            case 8:
                _ref2 = _iterator2[_i2++];
                context$1$0.next = 15;
                break;

            case 11:
                _i2 = _iterator2.next();

                if (!_i2.done) {
                    context$1$0.next = 14;
                    break;
                }

                return context$1$0.abrupt('break', 42);

            case 14:
                _ref2 = _i2.value;

            case 15:
                keychain = _ref2;
                context$1$0.next = 18;
                return _regeneratorRuntime.awrap((0, _security.findIdentities)({ type: 'codesigning', keychains: [keychain] }));

            case 18:
                identities = context$1$0.sent;
                developers = getDevelopersFromIdentities(identities);
                _iterator3 = developers, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);

            case 21:
                if (!_isArray3) {
                    context$1$0.next = 27;
                    break;
                }

                if (!(_i3 >= _iterator3.length)) {
                    context$1$0.next = 24;
                    break;
                }

                return context$1$0.abrupt('break', 40);

            case 24:
                _ref3 = _iterator3[_i3++];
                context$1$0.next = 31;
                break;

            case 27:
                _i3 = _iterator3.next();

                if (!_i3.done) {
                    context$1$0.next = 30;
                    break;
                }

                return context$1$0.abrupt('break', 40);

            case 30:
                _ref3 = _i3.value;

            case 31:
                developer = _ref3;
                context$1$0.next = 34;
                return _regeneratorRuntime.awrap((0, _mobileprovision.getAll)(_extends({}, filters, { developer: developer })));

            case 34:
                provision = context$1$0.sent;
                finalProvision = getBestMatchingProvision(provision);

                if (!finalProvision) {
                    context$1$0.next = 38;
                    break;
                }

                return context$1$0.abrupt('return', {
                    keychain: keychain,
                    developer: developer,
                    mobileprovision: finalProvision
                });

            case 38:
                context$1$0.next = 21;
                break;

            case 40:
                context$1$0.next = 5;
                break;

            case 42:
                return context$1$0.abrupt('return', null);

            case 43:
            case 'end':
                return context$1$0.stop();
        }
    }, null, _this);
};

module.exports = exports['default'];