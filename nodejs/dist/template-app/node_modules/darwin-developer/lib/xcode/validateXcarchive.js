'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Promise = require('babel-runtime/core-js/promise')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _this = this;

var _fsJetpack = require('fs-jetpack');

var _path = require('path');

exports['default'] = function callee$0$0(archivePath) {
    var results, isValid;
    return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
        while (1) switch (context$1$0.prev = context$1$0.next) {
            case 0:
                context$1$0.next = 2;
                return _regeneratorRuntime.awrap(_Promise.all([(0, _fsJetpack.existsAsync)((0, _path.join)(archivePath, 'Info.plist')), (0, _fsJetpack.existsAsync)((0, _path.join)(archivePath, 'Products', 'Applications'))]));

            case 2:
                results = context$1$0.sent;
                isValid = results[0] === 'file' && results[1] === 'dir';

                if (isValid) {
                    context$1$0.next = 6;
                    break;
                }

                throw new Error('Created .xcarchive seems to be broken');

            case 6:
            case 'end':
                return context$1$0.stop();
        }
    }, null, _this);
};

module.exports = exports['default'];